{"version":3,"sources":["p2-homeworks/h2/Affairs.module.css","p2-homeworks/h1/Message.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h3/Greeting.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Message","props","className","styles","message","src","avatar","ava","alt","chat","name","text","time","messageData","HW1","Affair","affair","prior","red","onClick","deleteAffairCallback","id","Affairs","mappedAffairs","data","map","a","priority","_id","button","setFilter","defaultAffairs","HW2","useState","affairs","setAffairs","filter","filteredAffairs","h","filterAffairs","d","deleteAffair","Greeting","inputClass","setNameCallback","addUser","error","totalUsers","s","mainClass","value","onChange","GreetingContainer","users","addUserCallback","setName","setError","length","e","currentTarget","alert","HW3","setUsers","v1","SuperInputText","type","onChangeText","onKeyPress","onEnter","spanClassName","restProps","finalSpanClassName","finalInputClassName","errorInput","superInput","key","SuperButton","finalClassName","default","SuperCheckbox","onChangeChecked","children","onChangeTest","onChangeCallback","checked","checkbox","HW4","setText","showAlert","setChecked","column","blue","disabled","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.2772562f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"red\":\"Affairs_red__aaiTq\",\"button\":\"Affairs_button__22GjV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__1PbQ7\",\"ava\":\"Message_ava__2y7vZ\",\"chat\":\"Message_chat__35oCa\",\"name\":\"Message_name__2i_wo\",\"text\":\"Message_text__2WwaF\",\"time\":\"Message_time__2m4yT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__mw64P\",\"errorInput\":\"SuperInputText_errorInput__pQlEn\",\"error\":\"SuperInputText_error__3xMLH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainClass\":\"Greeting_mainClass__T4jZi\",\"error\":\"Greeting_error__1aBxR\",\"button\":\"Greeting_button__2Ey-k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__XdO_5\",\"column\":\"HW4_column__3fxta\",\"testSpanError\":\"HW4_testSpanError__2cw7A\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__3NVI1\",\"red\":\"SuperButton_red__ioNUh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__2fU5n\",\"spanClassName\":\"SuperCheckbox_spanClassName__35MLD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__2xdOC\"};","import React from 'react'\nimport styles from './Message.module.css'\n\n\ntype MessageProps = {\n    avatar: string,\n    name: string,\n    message: string,\n    time: string\n}\n\nfunction Message(props: MessageProps) {\n    return (\n        <div className={styles.message}>\n\n            <div><img src={props.avatar} className={styles.ava} alt=\"\"/></div>\n            <div className={styles.chat}>\n                <div className={styles.name}>{props.name}</div>\n                <div className={styles.text}>{props.message}</div>\n                <div className={styles.time}>{props.time}</div>\n            </div>\n        </div>\n    )\n}\n\nexport default Message\n","import React from 'react'\nimport Message from \"./Message\";\n\nconst messageData = {\n    avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\n    name: 'Some Name',\n    message: 'some text',\n    time: '22:00',\n}\n\nfunction HW1() {\n    return (\n        <div>\n            <hr/>\n            homeworks 1\n\n            should work (должно работать)\n\n            <Message\n                avatar={messageData.avatar}\n                name={messageData.name}\n                message={messageData.message}\n                time={messageData.time}\n            />\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeMessage/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW1\n","import React from 'react'\nimport styles from './Affairs.module.css'\n\ntype AffairPropsType = {\n    // key не нужно типизировать\n    id:number\n    affair: string // need to fix any\n    prior: string\n    deleteAffairCallback: (_id: number) => void // need to fix any\n}\n\nfunction Affair(props: AffairPropsType) {\n    const deleteCallback = () => {\n  props.deleteAffairCallback(props.id)\n\n    }// need to fix\n\n    return (\n        <div>\n            {props.affair} - {props.prior}\n            <button className={styles.red} onClick={deleteCallback}>X</button>\n        </div>\n    )\n}\n\nexport default Affair\n","import React from 'react'\nimport Affair from './Affair'\nimport {AffairType, FilterType} from './HW2'\nimport styles from './Affairs.module.css'\n\ntype AffairsPropsType = { // need to fix any\n    data: Array<AffairType>\n    setFilter: (filter: FilterType) => void\n    deleteAffairCallback: (_id: number) => void\n}\n\nfunction Affairs(props: AffairsPropsType) {\n    const mappedAffairs = props.data.map((a: AffairType) => (\n        <Affair // should work\n            key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\n            affair={a.name}\n            prior={a.priority}\n            id={a._id}\n            deleteAffairCallback={props.deleteAffairCallback}\n        />\n    ))\n\n    const setAll = () => {\n        props.setFilter('all')\n    } // need to fix\n    const setHigh = () => {\n        props.setFilter('high')\n    }\n    const setMiddle = () => {\n        props.setFilter('middle')\n    }\n    const setLow = () => {\n        props.setFilter('low')\n    }\n\n    return (\n        <div>\n            {mappedAffairs}\n            <button className={styles.button} onClick={setAll}>All</button>\n            <button className={styles.button} onClick={setHigh}>High</button>\n            <button className={styles.button} onClick={setMiddle}>Middle</button>\n            <button className={styles.button} onClick={setLow}>Low</button>\n        </div>\n    )\n}\n\nexport default Affairs\n","import React, {useState} from 'react'\nimport Affairs from './Affairs'\n\n// types\nexport type AffairPriorityType = 'high' | 'middle' | 'low' // need to fix any\nexport type AffairType = {\n    _id: number,\n    name: string,\n    priority: string\n} // need to fix any\nexport type FilterType = 'all' | AffairPriorityType\n\n// constants\nconst defaultAffairs: Array<AffairType> = [ // need to fix any\n    {_id: 1, name: 'React', priority: 'high'},\n    {_id: 2, name: 'anime', priority: 'low'},\n    {_id: 3, name: 'games', priority: 'low'},\n    {_id: 4, name: 'work', priority: 'high'},\n    {_id: 5, name: 'html & css', priority: 'middle'},\n]\n\n// pure helper functions\nexport const filterAffairs = (affairs: Array<AffairType>, filter: FilterType): Array<AffairType> => { // need to fix any\n    // early return\n    if (filter === 'high') {\n        return affairs.filter(h => h.priority === 'high')\n    }\n    if (filter === 'middle') {\n        return affairs.filter(h => h.priority === 'middle')\n    }\n    if (filter === 'low') {\n        return affairs.filter(h => h.priority === 'low')\n    }\n    return affairs\n}\nexport const deleteAffair = (affairs: Array<AffairType>, _id: number): Array<AffairType> => { // need to fix any\n    return (\n        affairs.filter(d => _id !== d._id)           // need to fix\n    )\n}\n\nfunction HW2() {\n    const [affairs, setAffairs] = useState<Array<AffairType>>(defaultAffairs) // need to fix any\n    const [filter, setFilter] = useState<FilterType>('all')\n\n    const filteredAffairs = filterAffairs(affairs, filter)\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id)) // need to fix any\n\n    return (\n        <div>\n            <hr/>\n            homeworks 2\n\n            {/*should work (должно работать)*/}\n            <Affairs\n                data={filteredAffairs}\n                setFilter={setFilter}\n                deleteAffairCallback={deleteAffairCallback}\n            />\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeAffairs/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW2\n","import React, {ChangeEvent} from 'react'\nimport s from './Greeting.module.css'\n\ntype GreetingPropsType = {\n    name: string // need to fix any\n    setNameCallback: (e: ChangeEvent<HTMLInputElement>)=>void // need to fix any\n    addUser: ()=> void // need to fix any\n    error: string // need to fix any\n    totalUsers: number // need to fix any\n}\n\n// презентационная компонента (для верстальщика)\nconst Greeting: React.FC<GreetingPropsType> = (\n    {name, setNameCallback, addUser, error, totalUsers} // деструктуризация пропсов\n) => {\n    let inputClass\n     // need to fix with (?:)\n     error ? inputClass=s.error : inputClass=s.mainClass\n    return (\n        <div>\n            <input value={name}\n                   onChange={setNameCallback}\n                   className={inputClass}/>\n\n            <button className={s.button} onClick={addUser}>add</button>\n            <span>{totalUsers}</span>\n            <div>{error}</div>\n        </div>\n    )\n}\n\nexport default Greeting\n","import React, {ChangeEvent, useState} from 'react'\nimport Greeting from './Greeting'\n\n\ntype GreetingContainerPropsType = {\n    users: any // need to fix any\n    addUserCallback: (name: string) => void // need to fix any\n}\n\n// более простой и понятный для новичков\n// function GreetingContainer(props: GreetingPropsType) {\n\n// более современный и удобный для про :)\n// уровень локальной логики\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback}) => { // деструктуризация пропсов\n    const [name, setName] = useState<string>('') // need to fix any\n    const [error, setError] = useState<string>('') // need to fix any\n\n    const setNameCallback = (e: ChangeEvent<HTMLInputElement>) => { // need to fix any\n\n        if(e.currentTarget.value != ''){\n            setName(e.currentTarget.value)\n            setError('')\n\n        }\n        else { setError('error!!!')\n            setName('')\n\n        }\n\n    }\n\n    const addUser = () => {\n        alert(`Hello  ${name}!`)\n        addUserCallback(name)\n        // need to fix\n    }\n\n\n    const totalUsers = users.length // need to fix\n\n    return (\n        <Greeting\n            name={name}\n            setNameCallback={setNameCallback}\n            addUser={addUser}\n            error={error}\n            totalUsers={totalUsers}\n        />\n    )\n}\n\nexport default GreetingContainer\n","import React, {useState} from 'react'\nimport GreetingContainer from './GreetingContainer'\nimport {v1} from \"uuid\";\n\n// types\nexport type UserType = {\n    _id: string // need to fix any\n    name: string // need to fix any\n}\n\n// уровень работы с глобальными данными\nfunction HW3() {\n    const [users, setUsers] = useState<UserType[]>([]) // need to fix any\n\n    const addUserCallback = (name: string) => { // need to fix any\n        setUsers([...users, {_id: v1(), name}])\n    }\n\n    return (\n        <div>\n            <hr/>\n            homeworks 3\n\n            {/*should work (должно работать)*/}\n            <GreetingContainer users={users}\n                               addUserCallback={addUserCallback}/>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeGreeting/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW3\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\nimport s from './SuperInputText.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n}\n\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeText,\n        onKeyPress, onEnter,\n        error,\n        className, spanClassName,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange // если есть пропс onChange\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\n\n        onChangeText && onChangeText(e.currentTarget.value)\n    }\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\n        onKeyPress && onKeyPress(e);\n\n        onEnter // если есть пропс onEnter\n        && e.key === 'Enter' // и если нажата кнопка Enter\n        && onEnter() // то вызвать его\n    }\n\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\n    const finalInputClassName = `${s.errorInput}  ${s.superInput ? s.superInput : ''}` // need to fix with (?:) and s.superInput\n\n    return (\n        <>\n            <input\n                type={'text'}\n                onChange={onChangeCallback}\n                onKeyPress={onKeyPressCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n            />\n            {error && <span className={finalSpanClassName}>{error}</span>}\n        </>\n    )\n}\n\nexport default SuperInputText\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\nimport s from './SuperButton.module.css'\n\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n    red?: boolean\n}\n\nconst SuperButton: React.FC<SuperButtonPropsType> = (\n    {\n        red, className,\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\n    }\n) => {\n    const finalClassName = `${red ? s.red : s.default} ${className}`\n\n    return (\n        <button\n            className={finalClassName}\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\n        />\n    )\n}\n\nexport default SuperButton\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\nimport s from './SuperCheckbox.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\n    onChangeChecked?: (checked: boolean) => void\n    spanClassName?: string\n    onChangeTest?: (e: ChangeEvent<HTMLInputElement>) => void\n  }\n\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeChecked,\n        className, spanClassName,\n        children,\n        onChangeTest, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\n        onChange && onChange(e)\n    }\n\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\n\n    return (\n        <label>\n            <input\n                type={'checkbox'}\n                onChange={(e) => onChangeCallback(e)}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\n            />\n            {children && <span className={s.spanClassName}>{children}</span>}\n        </label> // благодаря label нажатие на спан передастся в инпут\n    )\n}\n\nexport default SuperCheckbox\n","import React, {ChangeEvent, useState} from 'react'\nimport SuperInputText from './common/c1-SuperInputText/SuperInputText'\nimport s from './HW4.module.css'\nimport SuperButton from './common/c2-SuperButton/SuperButton'\nimport SuperCheckbox from './common/c3-SuperCheckbox/SuperCheckbox'\n\n\n\n\nfunction HW4() {\n    const [text, setText] = useState<string>('')\n    const error = text ? '' : 'error'\n\n    const showAlert = () => {\n        if (error) {\n            alert('введите текст...')\n        } else {\n            alert(text) // если нет ошибки показать текст\n        }\n    }\n\n    const [checked, setChecked] = useState<boolean>(false)\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => {\n        setChecked(e.currentTarget.checked)\n\n    }\n\n\n    return (\n        <div>\n            <hr/>\n            homeworks 4\n\n            <div className={s.column}>\n                <SuperInputText\n                    value={text}\n                    onChangeText={setText}\n                    onEnter={showAlert}\n                    error={error}\n\n                    // spanClassName={s.testSpanError}\n                />\n\n                <SuperInputText\n                    className={s.blue} // проверьте, рабоет ли смешивание классов\n                />\n\n                {/*----------------------------------------------------*/}\n\n                <SuperButton>\n                    default\n                </SuperButton>\n\n                <SuperButton\n                    red // пропсу с булевым значением не обязательно указывать true\n                    onClick={showAlert}\n                >\n                    delete {/*// название кнопки попадёт в children*/}\n                </SuperButton>\n\n                <SuperButton disabled>\n                    disabled\n                </SuperButton>\n\n                {/*----------------------------------------------------*/}\n\n                <SuperCheckbox\n                    checked={checked}\n                    onChangeChecked={setChecked}\n                >\n                    some text {/*// этот текст попадёт в children*/}\n                </SuperCheckbox>\n\n                {/*// onChange тоже должен работать*/}\n                <SuperCheckbox checked={checked} onChange={testOnChange}/>\n            </div>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeSuperInputText/>*/}\n            {/*<AlternativeSuperButton/>*/}\n            {/*<AlternativeSuperCheckbox/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW4\n","import React from 'react'\nimport s from './App.module.css'\nimport HW1 from '../../../p2-homeworks/h1/HW1'\nimport HW2 from \"../../../p2-homeworks/h2/HW2\";\nimport HW3 from '../../../p2-homeworks/h3/HW3';\nimport HW4 from \"../../../p2-homeworks/h4/HW4\";\nimport HW5 from \"../../../p2-homeworks/h5/HW5\";\n\n\nfunction App() {\n    return (\n        <div className={s.App}>\n            <div>react homeworks:</div>\n            <HW1/>\n            <HW2/>\n            <HW3/>\n            <HW4/>\n\n        </div>\n    )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\ntype Config = {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(\n            process.env.PUBLIC_URL,\n            window.location.href\n        )\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config)\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    )\n                })\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config)\n            }\n        })\n    }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing\n                if (installingWorker == null) {\n                    return\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            )\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration)\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.')\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration)\n                            }\n                        }\n                    }\n                }\n            }\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error)\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: {'Service-Worker': 'script'}\n    })\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type')\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload()\n                    })\n                })\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config)\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            )\n        })\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then(registration => {\n                registration.unregister()\n            })\n            .catch(error => {\n                console.error(error.message)\n            })\n    }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './p1-main/m1-ui/u1-app/App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}